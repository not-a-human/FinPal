@page "/plan"
@inject CategoryDatabase CDatabase
@inject IJSRuntime JS
@inject NavigationManager Navigation

<h3 class="mb-5">Plan</h3>

<div id="category-not-0" class="d-none">
    <div class="row justify-content-center">
        <div class="col-12 mx-auto">
            <div class="my-4">
                <div class="list-group mb-5 shadow">
                    @foreach (var items in cItems)
                    {
                        <div class="list-group-item list-group-item-action">
                            <div class="row">
                                <div class="col-8">
                                    <strong class="mb-0">@items.Name</strong>
                                    <p class="text-muted mb-0">@items.Note</p>
                                </div>
                                <div class="col-4">
                                    <div class="input-group">
                                        <input onchange="calculateTotalPercentage()" type="number" class="form-control input-percent" id="percentage-@items.Id" placeholder="Enter Percentage" @bind-value="items.Percentage" @bind-value:event="oninput" min="0" max="100" />
                                        <span class="input-group-text"><i class="bi bi-percent"></i></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    <div class="list-group-item">
                        <div class="row">
                            <div class="col-8"></div>
                            <div id="totalPercentDiv" class="col-4 text-center @(totalPercent>100 ? "text-danger" : "text-success")"><span id="totalPercent">@totalPercent</span> <span><i class="bi bi-percent"></i></span></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="container text-center">
        <button class="btn btn-primary px-5" @onclick="UpdateItems">Update</button>
    </div>
</div>

<div id="category-is-0" class="d-none">
    <p class="m-4">
        It looks like no categories have been set up yet. You can create a new category <span class="text-primary cursor-pointer" @onclick="goToCategory"><strong><u>here</u></strong></span> to get started.
    </p>
</div>

<script>
    function calculateTotalPercentage() {
        var total = 0;
        var inputs = document.querySelectorAll(".input-percent");
        inputs.forEach(function (input) {
            var value = parseFloat(input.value);
            if (!isNaN(value)) {
                total += value;
            }
        });
        document.getElementById("totalPercent").innerText = total;

        if (total > 100) {
            document.getElementById("totalPercentDiv").classList.remove("text-success");
            document.getElementById("totalPercentDiv").classList.add("text-danger");
        } else {
            document.getElementById("totalPercentDiv").classList.remove("text-danger");
            document.getElementById("totalPercentDiv").classList.add("text-success");
        }
    }
</script>

@code {
    private List<FinPal.Models.Category> cItems = new List<FinPal.Models.Category>();
    private decimal totalPercent;

    protected override async Task OnInitializedAsync()
    {
        cItems = await CDatabase.GetItemsAsync();

        if(cItems.Count != 0)
        {
            CalculateTotalPercentage();
            await JS.InvokeVoidAsync("hideOrShowElement", "category-not-0");
        }
        else
        {
            await JS.InvokeVoidAsync("hideOrShowElement", "category-is-0");
        }


    }

    private async Task UpdateItems()
    {
        foreach (var item in cItems)
        {
            await CDatabase.SaveItemAsync(item);
        }
        await JS.InvokeVoidAsync("showToast", "Update", "Plans updated successfully.");

    }

    private void CalculateTotalPercentage()
    {
        totalPercent = cItems.Sum(item => item.Percentage);
    }

    private void goToCategory()
    {
        Navigation.NavigateTo("/settings/category");
    }
}
