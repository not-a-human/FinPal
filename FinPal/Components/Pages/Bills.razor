@page "/bills"
@inject BillDatabase BDatabase
@inject IJSRuntime JS
<h3 class="mb-5">Bills</h3>

<div class="d-grid gap-2 d-md-flex justify-content-md-end my-2">
    <a href="bills/form" class="btn btn-primary">New</a>
</div>
<div class="table-responsive-xxl">
    <table class="table table-striped table-hover" style="min-width: 1000px;">
        <thead>
            <tr>
                <th scope="col">Finance Name</th>
                <th scope="col">Item Name</th>
                <th scope="col">Amount Due</th>
                <th scope="col">Period</th>
                <th scope="col">Start Date</th>
                <th scope="col">End Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var iItem in bItems)
            {
                <tr>
                    <td scope="row">@iItem.FName</td>
                    <td>@iItem.ItemName</td>
                    <td>@iItem.AmountDue</td>
                    <td>@iItem.Period</td>
                    <td>@iItem.StartDate.ToString("yyyy-MMM")</td>
                    <td>@iItem.EndDate.ToString("yyyy-MMM")</td>
                </tr>
            }
        </tbody>
        <tfoot>
        </tfoot>
    </table>
</div>

@code {
    private List<FinPal.Models.BillwithFC> bItems = new List<FinPal.Models.BillwithFC>();


    protected override async Task OnInitializedAsync()
    {
        int fnCount = await BDatabase.GetCountAsync();

        // Check if database is NULL or 0
        if (fnCount != 0)
        {
            bItems = await BDatabase.GetItemsAsyncWithFC();
            await JS.InvokeVoidAsync("logToConsole", bItems);
        }
    }

}
