@page "/salary"
@inject SalaryDatabase SDatabase
@inject IJSRuntime JS

<h3 class="mb-5">Salary</h3>

<div class="row justify-content-center">
    <div class="col-12 mx-auto">
        <label for="selectedYear" class="form-label">Please select a year:</label>
        <div class="input-group">
            <span class="input-group-text"><i class="bi bi-calendar-fill"></i></span>
            <select name="selectedYear" class="form-select" @bind-value="selectedYear" @onchange="LoadSalaries" @bind-value:event="oninput">
                @for (int year = DateTime.Now.Year - 5; year <= DateTime.Now.Year + 1; year++)
                {
                    <option value="@year">@year</option>
                }
            </select>
        </div>
        
        @if(sItems != null)
        {
            <div class="my-4">
                <div class="list-group mb-5 shadow">
                    @foreach (var item in sItems)
                    {
                        <div class="list-group-item list-group-item-action">
                            <div class="row">
                                <div class="col-6">
                                    <strong class="mb-0">@GetMonthName(item.Month)-@item.Year</strong>
                                    <p class="text-muted mb-0"></p>
                                </div>
                                <div class="col-6">
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-currency-dollar"></i></span>
                                        <input type="number" class="form-control" id="amount-@item.Id" placeholder="Enter Amount" @bind-value="item.Amount" min="0" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

<div class="container text-center">
    <button class="btn btn-primary px-5" @onclick="UpdateItems">Update</button>
</div>

@code {
    private List<FinPal.Models.Salary> sItems = new List<FinPal.Models.Salary>();
    private int selectedYear = DateTime.Now.Year;

    protected override async Task OnInitializedAsync()
    {
        await LoadSalaries();
    }

    private async Task LoadSalaries()
    {
        sItems = await SDatabase.GetSalariesByYear(selectedYear);
    }

    private async Task UpdateItems()
    {
        foreach (var salary in sItems)
        {
            await SDatabase.UpdateItemAsync(salary);
        }
        
        await JS.InvokeVoidAsync("showToast", "Update", "Salaries updated successfully.");
    }

    private string GetMonthName(int month)
    {
        return new DateTime(1, month, 1).ToString("MMMM");
    }
}
