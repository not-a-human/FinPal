@inherits LayoutComponentBase
@inject SettingsDatabase SettingsDatabase
@inject IJSRuntime JS

<div id="help-file-backdrop" class="d-none" onclick="helpFileToggle()"></div>
<div id="help-file" class="rounded shadow p-0 d-none">
    <div class="card h-100 m-0">
        <div class="card-header">
            <div class="d-flex align-content-center justify-content-between">
                <span><SectionOutlet SectionName="help-title" /></span>
                <button class="btn-close" onclick="helpFileToggle()"></button>
            </div>
        </div>
        <div class="card-body">
            <SectionOutlet SectionName="help-body" />
        </div>
    </div>
</div>

<div id="custom-modal-backdrop" class="d-none" onclick="customModalToggle()"></div>
<div id="custom-modal" class="rounded shadow p-0 d-none">
    <div class="card h-100 m-0">
        <div class="card-header">
            <div class="d-flex align-content-center justify-content-between">
                <span><SectionOutlet SectionName="custom-modal-title" /></span>
                <button class="btn-close" onclick="customModalToggle()"></button>
            </div>
        </div>
        <div class="card-body">
            <SectionOutlet SectionName="custom-modal-body" />
        </div>
    </div>
</div>

<div style="height:100vh" class="page @UiTheme">

    <header id="header">
        <div class="sidebar">
            <div class="d-flex flex-column">
                <div class="profile">
                    <h1 class="text-light m-3"><a href="index">FinPal</a></h1>
                </div>
                <NavMenu />
            </div>
        </div>
    </header>

    <div class="top-panel d-flex justify-content-between">
        <SectionOutlet SectionName="page-actions-1" />
        <h3 id="page-title"><SectionOutlet SectionName="page-title" /></h3>
        <div id="top-panel-actions">
            <SectionOutlet SectionName="page-actions" />
             <SectionOutlet SectionName="dropdown-menu-items" />
        </div>
       
    </div>

    <main id="main">
        <section class="inner-page">
            <div class="container">
                @Body
            </div>
        </section>
    </main>

</div>

<div id="mainToastContainer" class="toast-container p-3 mt-3 start-50 translate-middle-x position-fixed"></div>

<div id="autoHideToastContainer" class="toast-container position-fixed start-50 translate-middle-x p-3">
    <div id="autoHideToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
</div>

@code {
    private string UiTheme { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        Settings userSettings = await SettingsDatabase.GetItemAsync("UIMode");
        Settings PColor = await SettingsDatabase.GetItemAsync("--primary-color");
        Settings WColor = await SettingsDatabase.GetItemAsync("--warning-color");
        Settings SColor = await SettingsDatabase.GetItemAsync("--success-color");
        Settings IColor = await SettingsDatabase.GetItemAsync("--info-color");
        Settings DColor = await SettingsDatabase.GetItemAsync("--danger-color");

        // Change app theme to light/dark
        string theme = userSettings?.SetStr?? "dark"; // Default to "dark" if no settings exist
        UiTheme = theme == "dark" ? "" : "light-mode-bg";
        await JS.InvokeVoidAsync("setTheme", theme);

        //Change CSS variable colors
        await JS.InvokeVoidAsync("changeCSSVariable", PColor);
        await JS.InvokeVoidAsync("changeCSSVariable", WColor);
        await JS.InvokeVoidAsync("changeCSSVariable", SColor);
        await JS.InvokeVoidAsync("changeCSSVariable", IColor);
        await JS.InvokeVoidAsync("changeCSSVariable", DColor);

    }
}