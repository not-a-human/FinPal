@inherits LayoutComponentBase
@inject SettingsDatabase SettingsDatabase
@inject IJSRuntime JS
<div style="height:100vh" id="mainPageBG" class="page @UiTheme">

    <header id="header">
        <div class="sidebar">
            <div class="d-flex flex-column">
                <div class="profile">
                    <h1 class="text-light m-3"><a href="index">FinPal</a></h1>
                </div>
                <NavMenu />
            </div>
        </div>
    </header>

    <div class="top-panel d-flex justify-content-between">
        <SectionOutlet SectionName="page-actions-1" />
        <h3 id="page-title"><SectionOutlet SectionName="page-title" /></h3>
        <SectionOutlet SectionName="page-actions" />
        <SectionOutlet SectionName="dropdown-menu-items" />
    </div>

    <main id="main">
        <section class="inner-page">
            <div class="container">
                @Body
            </div>
        </section>
    </main>

</div>

    <div id="mainToastContainer" class="toast-container p-3 mt-3 start-50 translate-middle-x position-fixed"></div>

@code {
    private string UiTheme { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        var userSettings = await SettingsDatabase.GetItemAsync("UIMode"); // Assume this method retrieves user settings
        string theme = userSettings?.SetStr?? "dark"; // Default to "dark" if no settings exist
        SetTheme(theme);
        UiTheme = theme == "dark" ? "" : "light-mode-bg";
    }

    private void SetTheme(string theme)
    {
        // Use JS interop to set the theme in the HTML
        JS.InvokeVoidAsync("setTheme", theme);
    }
}